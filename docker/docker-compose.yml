version: '3'                                        # Utilisation de la version 3 de la syntaxe docker-compose
services:                                           # Définition des services (conteneurs) que vous souhaitez exécuter

  front:                                            # Nom du service, ici 'front', qui sera utilisé pour référencer ce service dans Docker
    build:                                          # Instruction pour construire l'image Docker de ce service
      context: .                                    # Le contexte de build, '.' indique le répertoire courant
      dockerfile: Dockerfile.front                  # Nom du fichier Dockerfile à utiliser pour la construction
    image: image_flask_front                        # Nom et tag de l'image Docker qui sera créée
    container_name: container_front                 # Nom du conteneur Docker qui sera créé
    ports:
      - "5000:5000"                                 # Mappage des ports: port 5001 de l'hôte vers le port 5000 du conteneur
    volumes:
      - /home/toto/projet-rt0707/front:/app         # Montage du volume: dossier sur l'hôte vers le dossier dans le conteneur.
  
  serveur:                                          # Définition du service "serveur"
    build:                                          # Spécifie la construction de l'image
      context: .                                    # Répertoire contexte de construction
      dockerfile: Dockerfile.serveur                # Utilise le fichier Dockerfile.serveur
    image: image_flask_back                         # Nom de l'image générée
    container_name: container_serveur               # Nom du conteneur
    ports:
      - "5001:5000"                                 # Mappage du port 5001 de l'hôte au port 5000 du conteneur
    volumes:
      - /home/toto/projet-rt0707/serveur:/app       # Montage du volume hôte dans le conteneur
    environment:                                    # Variables d'environnement pour le service
      - MONGO_USERNAME=mongoadmin                   # Nom d'utilisateur MongoDB
      - MONGO_PASSWORD=secret                       # Mot de passe MongoDB
      - MONGO_HOSTNAME=mongo                        # Nom d'hôte de MongoDB
      - MONGO_PORT=27017                            # Port de MongoDB

  mongo:                                            # Définition du service "mongo"
    image: mongo:latest                             # Utilise l'image MongoDB la plus récente
    ports:
      - "27017:27017"                               # Mappage du port 27017 de l'hôte au port 27017 du conteneur
    environment:                                    # Variables d'environnement pour le service MongoDB
      MONGO_INITDB_ROOT_USERNAME: mongoadmin        # Nom d'utilisateur root MongoDB
      MONGO_INITDB_ROOT_PASSWORD: secret            # Mot de passe root MongoDB
    volumes:
      - /home/toto/projet-rt0707/mongoDb:/data/db   # Montage du volume hôte dans le conteneur MongoDB

  door:                                             
    build:                                          
      context: .                                    
      dockerfile: Dockerfile.door                  
    image: image_flask_door                        
    container_name: container_door                
    ports:
      - "5000:5000"                                 
    volumes:
      - /home/toto/projet-rt0707/porte:/app    

  iotHub:                                             
    build:                                          
      context: .                                    
      dockerfile: Dockerfile.iotHub                  
    image: image_flask_iot_hub                       
    container_name: container_iot_hub               
    ports:
      - "5000:5000"                                 
    volumes:
      - /home/toto/projet-rt0707/iotHub:/app         

